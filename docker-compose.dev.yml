version: '3.8'

services:
  meshai-mcp-server-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    image: meshai/mcp-server:dev
    container_name: meshai-mcp-server-dev
    environment:
      - MESHAI_API_URL=${MESHAI_API_URL:-http://host.docker.internal:8080}
      - MESHAI_API_KEY=${MESHAI_API_KEY}
      - PYTHONUNBUFFERED=1
      - MESHAI_LOG_LEVEL=DEBUG
      - PYTHONPATH=/app/src
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - ./config:/app/config:ro
      # Cache Python packages
      - mcp-cache:/home/meshai/.cache/pip
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - meshai-dev-network
    ports:
      - "8080:8080"  # Optional HTTP interface for debugging
    command: ["python", "-m", "meshai_mcp.server", "--dev"]

  # Test runner service
  mcp-tests:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    image: meshai/mcp-server:dev
    container_name: meshai-mcp-tests
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/src
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - ./pytest.ini:/app/pytest.ini:ro
    working_dir: /app
    command: ["pytest", "tests/", "-v", "--tb=short"]
    profiles:
      - test
    networks:
      - meshai-dev-network

  # Mock MeshAI API for testing
  mock-meshai-api:
    image: wiremock/wiremock:latest
    container_name: mock-meshai-api
    ports:
      - "8080:8080"
    volumes:
      - ./tests/mocks:/home/wiremock/mappings:ro
    command: ["--port", "8080", "--verbose"]
    profiles:
      - mock
    networks:
      - meshai-dev-network

volumes:
  mcp-cache:
    name: meshai-mcp-cache

networks:
  meshai-dev-network:
    driver: bridge
    name: meshai-dev-network